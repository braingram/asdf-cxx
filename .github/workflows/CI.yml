name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12]
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      if: ${{startsWith$({{matrix.os}}, "macos.04"}}
      run: brew install -y lcov libblosc-dev libbz2-dev liblz4-dev libssl-dev libyaml-cpp-dev libzstd-dev ninja-build python3-numpy zlib1g-dev
    - name: Install dependencies
      if: ${{startsWith$({{matrix.os}}, "ubuntu-22.04"}}
      run: sudo apt install -y lcov libblosc-dev libbz2-dev liblz4-dev libssl-dev libyaml-cpp-dev libzstd-dev ninja-build python3-numpy zlib1g-dev
    - name: Configure
      run: cmake -B build -G Ninja -S . -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX="$HOME/install" -DCODE_COVERAGE=ON
    - name: Build
      run: cmake --build build --parallel $(nproc)
    - name: Install
      run: cmake --install build
    - name: Test
      run: ctest --test-dir build --output-on-failure
    - name: Collect code coverage
      run: |
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info # filter system-files
        lcov --list coverage.info # debug info
    - uses: codecov/codecov-action@v3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
